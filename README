Моя структура данных называется MultiMap. 
Она параметризована дженериками, наследуется от HashMap, и реализует интерфейсы Cloneable, Serializable. Особенность мапы будет в том, что конструктор принимает число типа int repeatCount - это количество, сколько значений может хранится по одному ключу. 
Краткая информация по методам:

int size() - должен возвращать количество значений в нашей коллекции.

V put(K key, V value) - должен добавить элемент value по ключу key. Если в мапе такой ключ уже есть, и количество значений по этому ключу меньше, чем repeatCount - то добавь элемент value в конец листа в объекте map. Если по такому ключу количество значений равняется repeatCount - то удали из листа в объекте map элемент с индексом ноль, и добавь в конец листа value. Метод должен возвращать значение последнего добавленного элемента по ключу key (но не значение, которое мы сейчас добавляем). Если по ключу key значений еще нет - возвращается null.

V remove(Object key) - должен удалить элемент по ключу key. Если по этому ключу хранится несколько элементов - должен удаляться элемент из листа с индексом ноль. Если по какому-то ключу хранится лист размером ноль элементов - удали такую пару ключ : значение. Метод должен возвращать элемент, который ты удалил. Если в мапе нет ключа key - возвращается null.

Set<K> keySet() - должен вернуть сет всех ключей, которые есть в мапе map.

Collection<V> values() - должен вернуть ArrayList<V> всех значений. Порядок значений в листе не имеет значения.

boolean containsKey(Object key) - должен вернуть true, если в мапе присутствует ключ key, иначе вернуть false.

boolean containsValue(Object value) - должен вернуть true, если в мапе присутствует значение value, иначе вернуть false.

